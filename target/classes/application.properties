#spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.hibernate.ddl-auto=update
#
### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://ec2-44-206-137-96.compute-1.amazonaws.com:5432/d9mcn3rccd7d17
spring.datasource.username=itafvznxzedaxi
spring.datasource.password=41a4c09d8646970bb1dceddbc00da958c7d204990e61aa0f27014badb4f6b8fa

# Oauth Properties
spring.security.oauth2.client.registration.google.client-id=612959028361-gj31do4gb75jtufu3fs39tv3jf268964.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

# Paytm Properties
paytm.payment.sandbox.merchantId=PxSJxm18599800700080
paytm.payment.sandbox.merchantKey=Ia7uIsrHVzEkp1Ja
paytm.payment.sandbox.channelId=WEB
paytm.payment.sandbox.industryTypeId=Retail
paytm.payment.sandbox.website=WEBSTAGING
paytm.payment.sandbox.paytmUrl=https://securegw-stage.paytm.in/order/process
paytm.payment.sandbox.callbackUrl=http://localhost:8080/pgresponse
paytm.payment.sandbox.details.MID= ${paytm.payment.sandbox.merchantId}
paytm.payment.sandbox.details.CHANNEL_ID= ${paytm.payment.sandbox.channelId}
paytm.payment.sandbox.details.INDUSTRY_TYPE_ID= ${paytm.payment.sandbox.industryTypeId}
paytm.payment.sandbox.details.WEBSITE= ${paytm.payment.sandbox.website}
paytm.payment.sandbox.details.CALLBACK_URL= ${paytm.payment.sandbox.callbackUrl}
paytm.mobile =9808407890
paytm.email =itspranjal00@gmail.com

spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
